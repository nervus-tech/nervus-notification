name: CD Staging - Notification Service

on:
  push:
    branches: [develop]
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to deploy'
        required: true
        default: 'notification'

jobs:
  deploy-staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Staging VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            cd /opt/nervus.tech/nervus-notification
            git pull origin develop
            docker-compose -f notification/docker-compose-staging.yml down || true
            docker pull ghcr.io/nervus-tech/nervus-notification:latest
            docker-compose -f notification/docker-compose-staging.yml up -d
            sleep 35
            curl -f http://localhost:8103/actuator/health || exit 1

      - name: Integration Test - Direct Health
        run: |
          curl -f http://${{ secrets.STAGING_HOST }}:8103/actuator/health || exit 1

      - name: Database Connectivity Test
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          curl -s http://${{ secrets.STAGING_HOST }}:8103/actuator/health | jq -r '.components.db.status' | grep -q "UP"

      - name: API Gateway Routing Test
        run: |
          curl -f http://${{ secrets.STAGING_HOST }}:8112/NOTIFICATION/actuator/health || exit 1

      - name: Performance Test
        run: |
          sudo apt-get update && sudo apt-get install -y apache2-utils
          ab -n 200 -c 20 http://${{ secrets.STAGING_HOST }}:8103/actuator/health | tee ab_output.txt

      - name: Response Time Threshold Check (non-blocking)
        continue-on-error: true
        run: |
          THRESHOLD_MS=500
          P95=$(awk '/95%/ {print $2}' ab_output.txt)
          MEAN=$(awk -F '[: ]+' '/Time per request:/ {print $5; exit}' ab_output.txt)
          echo "p95(ms)=" $P95
          echo "mean(ms)=" $MEAN
          if [ -z "$P95" ] || [ -z "$MEAN" ]; then
            echo "Could not parse ab output; skipping assertion"
            exit 0
          fi
          if [ "$(printf '%.0f' "$P95")" -gt "$THRESHOLD_MS" ]; then
            echo "⚠️ p95 response time ($P95 ms) exceeds threshold ($THRESHOLD_MS ms)."
          else
            echo "✅ p95 response time within threshold."
          fi
          exit 0

      - name: Resource Usage Snapshot (non-blocking)
        continue-on-error: true
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            echo "Container list (grep notification-staging):"
            docker ps --format '{{.ID}}\t{{.Names}}\t{{.Status}}' | grep notification-staging || true
            echo "docker stats (single snapshot):"
            docker stats --no-stream --format 'table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}' | grep notification-staging || true

      - name: Notify Deployment
        if: success()
        run: echo "✅ Staging deployment successful for nervus-notification"
        
  # duplicate block removed
